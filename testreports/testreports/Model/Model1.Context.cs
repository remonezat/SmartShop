//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace testreports.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class openshopdataEntities : DbContext
    {
        public openshopdataEntities()
            : base("name=openshopdataEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<account> accounts { get; set; }
        public virtual DbSet<accounts_discounts> accounts_discounts { get; set; }
        public virtual DbSet<accounts_dueDates> accounts_dueDates { get; set; }
        public virtual DbSet<Banks_acc_deposits> Banks_acc_deposits { get; set; }
        public virtual DbSet<Banks_acc_transactions> Banks_acc_transactions { get; set; }
        public virtual DbSet<Banks_acc_withdraws> Banks_acc_withdraws { get; set; }
        public virtual DbSet<Banks_accounts> Banks_accounts { get; set; }
        public virtual DbSet<barcode> barcodes { get; set; }
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<capital> capitals { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<clr> clrs { get; set; }
        public virtual DbSet<company> companies { get; set; }
        public virtual DbSet<delivery_customers> delivery_customers { get; set; }
        public virtual DbSet<empos> empos { get; set; }
        public virtual DbSet<empos_attend> empos_attend { get; set; }
        public virtual DbSet<empos_finals> empos_finals { get; set; }
        public virtual DbSet<empos_jobs> empos_jobs { get; set; }
        public virtual DbSet<empos_pay> empos_pay { get; set; }
        public virtual DbSet<empos_upDown> empos_upDown { get; set; }
        public virtual DbSet<Factory> Factories { get; set; }
        public virtual DbSet<img> imgs { get; set; }
        public virtual DbSet<Income> Incomes { get; set; }
        public virtual DbSet<installment_new> installment_new { get; set; }
        public virtual DbSet<installment_pays> installment_pays { get; set; }
        public virtual DbSet<installment_slrs> installment_slrs { get; set; }
        public virtual DbSet<installment_traders> installment_traders { get; set; }
        public virtual DbSet<installment_TradersMovs> installment_TradersMovs { get; set; }
        public virtual DbSet<item> items { get; set; }
        public virtual DbSet<items_drafts> items_drafts { get; set; }
        public virtual DbSet<items_pack> items_pack { get; set; }
        public virtual DbSet<items_slrData> items_slrData { get; set; }
        public virtual DbSet<items_units> items_units { get; set; }
        public virtual DbSet<items_units_lnks> items_units_lnks { get; set; }
        public virtual DbSet<mchn> mchns { get; set; }
        public virtual DbSet<model> models { get; set; }
        public virtual DbSet<MSdynamicsnapshotview> MSdynamicsnapshotviews { get; set; }
        public virtual DbSet<MSmerge_dynamic_snapshots> MSmerge_dynamic_snapshots { get; set; }
        public virtual DbSet<MSmerge_partition_groups> MSmerge_partition_groups { get; set; }
        public virtual DbSet<MSpeer_conflictdetectionconfigrequest> MSpeer_conflictdetectionconfigrequest { get; set; }
        public virtual DbSet<MSpeer_lsns> MSpeer_lsns { get; set; }
        public virtual DbSet<Offer> Offers { get; set; }
        public virtual DbSet<Outcome> Outcomes { get; set; }
        public virtual DbSet<payment> payments { get; set; }
        public virtual DbSet<purchase> purchases { get; set; }
        public virtual DbSet<purchase_det> purchase_det { get; set; }
        public virtual DbSet<purchase_re> purchase_re { get; set; }
        public virtual DbSet<purchase_re_det> purchase_re_det { get; set; }
        public virtual DbSet<repre_months> repre_months { get; set; }
        public virtual DbSet<sale> sales { get; set; }
        public virtual DbSet<sales_det> sales_det { get; set; }
        public virtual DbSet<sales_re> sales_re { get; set; }
        public virtual DbSet<sales_re_det> sales_re_det { get; set; }
        public virtual DbSet<sales_visa> sales_visa { get; set; }
        public virtual DbSet<Shift> Shifts { get; set; }
        public virtual DbSet<siz> sizs { get; set; }
        public virtual DbSet<Stock> Stocks { get; set; }
        public virtual DbSet<Stocks_Trans> Stocks_Trans { get; set; }
        public virtual DbSet<sysreplserver> sysreplservers { get; set; }
        public virtual DbSet<tw> tws { get; set; }
        public virtual DbSet<user_brchs_lnks> user_brchs_lnks { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<WorkOrder> WorkOrders { get; set; }
        public virtual DbSet<DataSetting> DataSettings { get; set; }
        public virtual DbSet<dbversion> dbversions { get; set; }
        public virtual DbSet<inv_booking> inv_booking { get; set; }
        public virtual DbSet<inv_pays_lnk> inv_pays_lnk { get; set; }
        public virtual DbSet<MSdynamicsnapshotjob> MSdynamicsnapshotjobs { get; set; }
        public virtual DbSet<MSmerge_agent_parameters> MSmerge_agent_parameters { get; set; }
        public virtual DbSet<MSmerge_altsyncpartners> MSmerge_altsyncpartners { get; set; }
        public virtual DbSet<MSmerge_articlehistory> MSmerge_articlehistory { get; set; }
        public virtual DbSet<MSmerge_conflicts_info> MSmerge_conflicts_info { get; set; }
        public virtual DbSet<MSmerge_contents> MSmerge_contents { get; set; }
        public virtual DbSet<MSmerge_current_partition_mappings> MSmerge_current_partition_mappings { get; set; }
        public virtual DbSet<MSmerge_errorlineage> MSmerge_errorlineage { get; set; }
        public virtual DbSet<MSmerge_generation_partition_mappings> MSmerge_generation_partition_mappings { get; set; }
        public virtual DbSet<MSmerge_genhistory> MSmerge_genhistory { get; set; }
        public virtual DbSet<MSmerge_history> MSmerge_history { get; set; }
        public virtual DbSet<MSmerge_identity_range> MSmerge_identity_range { get; set; }
        public virtual DbSet<MSmerge_log_files> MSmerge_log_files { get; set; }
        public virtual DbSet<MSmerge_metadataaction_request> MSmerge_metadataaction_request { get; set; }
        public virtual DbSet<MSmerge_past_partition_mappings> MSmerge_past_partition_mappings { get; set; }
        public virtual DbSet<MSmerge_replinfo> MSmerge_replinfo { get; set; }
        public virtual DbSet<MSmerge_sessions> MSmerge_sessions { get; set; }
        public virtual DbSet<MSmerge_settingshistory> MSmerge_settingshistory { get; set; }
        public virtual DbSet<MSmerge_supportability_settings> MSmerge_supportability_settings { get; set; }
        public virtual DbSet<MSmerge_tombstone> MSmerge_tombstone { get; set; }
        public virtual DbSet<MSpeer_conflictdetectionconfigresponse> MSpeer_conflictdetectionconfigresponse { get; set; }
        public virtual DbSet<MSpeer_originatorid_history> MSpeer_originatorid_history { get; set; }
        public virtual DbSet<MSpeer_request> MSpeer_request { get; set; }
        public virtual DbSet<MSpeer_response> MSpeer_response { get; set; }
        public virtual DbSet<MSpeer_topologyrequest> MSpeer_topologyrequest { get; set; }
        public virtual DbSet<MSpeer_topologyresponse> MSpeer_topologyresponse { get; set; }
        public virtual DbSet<MSpub_identity_range> MSpub_identity_range { get; set; }
        public virtual DbSet<MSrepl_errors> MSrepl_errors { get; set; }
        public virtual DbSet<newcolumn> newcolumns { get; set; }
        public virtual DbSet<order> orders { get; set; }
        public virtual DbSet<printsetting> printsettings { get; set; }
        public virtual DbSet<repre_comm_levels> repre_comm_levels { get; set; }
        public virtual DbSet<representative> representatives { get; set; }
        public virtual DbSet<sales_det_pack> sales_det_pack { get; set; }
        public virtual DbSet<sales_re_det_pack> sales_re_det_pack { get; set; }
        public virtual DbSet<Stocks_OB> Stocks_OB { get; set; }
        public virtual DbSet<Stocks_Trans_det> Stocks_Trans_det { get; set; }
        public virtual DbSet<sysarticlecolumn> sysarticlecolumns { get; set; }
        public virtual DbSet<sysarticle> sysarticles { get; set; }
        public virtual DbSet<sysarticleupdate> sysarticleupdates { get; set; }
        public virtual DbSet<sysmergearticle> sysmergearticles { get; set; }
        public virtual DbSet<sysmergepartitioninfo> sysmergepartitioninfoes { get; set; }
        public virtual DbSet<sysmergepublication> sysmergepublications { get; set; }
        public virtual DbSet<sysmergeschemaarticle> sysmergeschemaarticles { get; set; }
        public virtual DbSet<sysmergeschemachange> sysmergeschemachanges { get; set; }
        public virtual DbSet<sysmergesubscription> sysmergesubscriptions { get; set; }
        public virtual DbSet<sysmergesubsetfilter> sysmergesubsetfilters { get; set; }
        public virtual DbSet<syspublication> syspublications { get; set; }
        public virtual DbSet<sysschemaarticle> sysschemaarticles { get; set; }
        public virtual DbSet<syssubscription> syssubscriptions { get; set; }
        public virtual DbSet<systranschema> systranschemas { get; set; }
        public virtual DbSet<WorkOrders_StkTrns_lnks> WorkOrders_StkTrns_lnks { get; set; }
        public virtual DbSet<bank_statement> bank_statement { get; set; }
        public virtual DbSet<Banks_allAccCredit> Banks_allAccCredit { get; set; }
        public virtual DbSet<banks_treasuriesNames> banks_treasuriesNames { get; set; }
        public virtual DbSet<Items_credits> Items_credits { get; set; }
        public virtual DbSet<Items_limit> Items_limit { get; set; }
        public virtual DbSet<sysextendedarticlesview> sysextendedarticlesviews { get; set; }
        public virtual DbSet<sysmergeextendedarticlesview> sysmergeextendedarticlesviews { get; set; }
        public virtual DbSet<sysmergepartitioninfoview> sysmergepartitioninfoviews { get; set; }
        public virtual DbSet<v1> v1 { get; set; }
        public virtual DbSet<v2> v2 { get; set; }
        public virtual DbSet<WorkOrders_Current> WorkOrders_Current { get; set; }
        public virtual DbSet<workOrders_v> workOrders_v { get; set; }
    
        [DbFunction("openshopdataEntities", "banksAccountsNames")]
        public virtual IQueryable<banksAccountsNames_Result> banksAccountsNames(Nullable<int> brnch_id, Nullable<int> usr_id)
        {
            var brnch_idParameter = brnch_id.HasValue ?
                new ObjectParameter("brnch_id", brnch_id) :
                new ObjectParameter("brnch_id", typeof(int));
    
            var usr_idParameter = usr_id.HasValue ?
                new ObjectParameter("usr_id", usr_id) :
                new ObjectParameter("usr_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<banksAccountsNames_Result>("[openshopdataEntities].[banksAccountsNames](@brnch_id, @usr_id)", brnch_idParameter, usr_idParameter);
        }
    
        [DbFunction("openshopdataEntities", "DateRange")]
        public virtual IQueryable<DateRange_Result> DateRange(string increment, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var incrementParameter = increment != null ?
                new ObjectParameter("Increment", increment) :
                new ObjectParameter("Increment", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DateRange_Result>("[openshopdataEntities].[DateRange](@Increment, @StartDate, @EndDate)", incrementParameter, startDateParameter, endDateParameter);
        }
    
        [DbFunction("openshopdataEntities", "exp_items_func")]
        public virtual IQueryable<exp_items_func_Result> exp_items_func(Nullable<int> dys)
        {
            var dysParameter = dys.HasValue ?
                new ObjectParameter("dys", dys) :
                new ObjectParameter("dys", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<exp_items_func_Result>("[openshopdataEntities].[exp_items_func](@dys)", dysParameter);
        }
    
        [DbFunction("openshopdataEntities", "getCreditDebit")]
        public virtual IQueryable<getCreditDebit_Result> getCreditDebit(Nullable<System.DateTime> before_date)
        {
            var before_dateParameter = before_date.HasValue ?
                new ObjectParameter("before_date", before_date) :
                new ObjectParameter("before_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getCreditDebit_Result>("[openshopdataEntities].[getCreditDebit](@before_date)", before_dateParameter);
        }
    
        [DbFunction("openshopdataEntities", "getCreditDebit_all")]
        public virtual IQueryable<getCreditDebit_all_Result> getCreditDebit_all()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getCreditDebit_all_Result>("[openshopdataEntities].[getCreditDebit_all]()");
        }
    
        [DbFunction("openshopdataEntities", "getItemData")]
        public virtual IQueryable<getItemData_Result> getItemData(Nullable<int> item_id, Nullable<int> stk_id)
        {
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("item_id", item_id) :
                new ObjectParameter("item_id", typeof(int));
    
            var stk_idParameter = stk_id.HasValue ?
                new ObjectParameter("stk_id", stk_id) :
                new ObjectParameter("stk_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getItemData_Result>("[openshopdataEntities].[getItemData](@item_id, @stk_id)", item_idParameter, stk_idParameter);
        }
    
        [DbFunction("openshopdataEntities", "getItemData_bybarcode")]
        public virtual IQueryable<getItemData_bybarcode_Result> getItemData_bybarcode(string barcode, Nullable<int> stk_id)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var stk_idParameter = stk_id.HasValue ?
                new ObjectParameter("stk_id", stk_id) :
                new ObjectParameter("stk_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getItemData_bybarcode_Result>("[openshopdataEntities].[getItemData_bybarcode](@barcode, @stk_id)", barcodeParameter, stk_idParameter);
        }
    
        [DbFunction("openshopdataEntities", "getItemOB")]
        public virtual IQueryable<getItemOB_Result> getItemOB(Nullable<int> item_id)
        {
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("item_id", item_id) :
                new ObjectParameter("item_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getItemOB_Result>("[openshopdataEntities].[getItemOB](@item_id)", item_idParameter);
        }
    
        [DbFunction("openshopdataEntities", "hima")]
        public virtual IQueryable<hima_Result> hima(Nullable<int> num1, Nullable<int> num2)
        {
            var num1Parameter = num1.HasValue ?
                new ObjectParameter("num1", num1) :
                new ObjectParameter("num1", typeof(int));
    
            var num2Parameter = num2.HasValue ?
                new ObjectParameter("num2", num2) :
                new ObjectParameter("num2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<hima_Result>("[openshopdataEntities].[hima](@num1, @num2)", num1Parameter, num2Parameter);
        }
    
        [DbFunction("openshopdataEntities", "Item_actions")]
        public virtual IQueryable<Item_actions_Result> Item_actions(Nullable<int> it_id, Nullable<System.DateTime> dte_from, Nullable<System.DateTime> dte_to)
        {
            var it_idParameter = it_id.HasValue ?
                new ObjectParameter("it_id", it_id) :
                new ObjectParameter("it_id", typeof(int));
    
            var dte_fromParameter = dte_from.HasValue ?
                new ObjectParameter("dte_from", dte_from) :
                new ObjectParameter("dte_from", typeof(System.DateTime));
    
            var dte_toParameter = dte_to.HasValue ?
                new ObjectParameter("dte_to", dte_to) :
                new ObjectParameter("dte_to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Item_actions_Result>("[openshopdataEntities].[Item_actions](@it_id, @dte_from, @dte_to)", it_idParameter, dte_fromParameter, dte_toParameter);
        }
    
        [DbFunction("openshopdataEntities", "items_sales_credits_shift")]
        public virtual IQueryable<items_sales_credits_shift_Result> items_sales_credits_shift(Nullable<int> shift)
        {
            var shiftParameter = shift.HasValue ?
                new ObjectParameter("shift", shift) :
                new ObjectParameter("shift", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<items_sales_credits_shift_Result>("[openshopdataEntities].[items_sales_credits_shift](@shift)", shiftParameter);
        }
    
        [DbFunction("openshopdataEntities", "netSales_itmTot")]
        public virtual IQueryable<netSales_itmTot_Result> netSales_itmTot(Nullable<System.DateTime> dteF, Nullable<System.DateTime> dteT, string category)
        {
            var dteFParameter = dteF.HasValue ?
                new ObjectParameter("dteF", dteF) :
                new ObjectParameter("dteF", typeof(System.DateTime));
    
            var dteTParameter = dteT.HasValue ?
                new ObjectParameter("dteT", dteT) :
                new ObjectParameter("dteT", typeof(System.DateTime));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<netSales_itmTot_Result>("[openshopdataEntities].[netSales_itmTot](@dteF, @dteT, @Category)", dteFParameter, dteTParameter, categoryParameter);
        }
    
        [DbFunction("openshopdataEntities", "netSalesEmp_itmTot")]
        public virtual IQueryable<netSalesEmp_itmTot_Result> netSalesEmp_itmTot(Nullable<int> e_id, Nullable<System.DateTime> dteF, Nullable<System.DateTime> dteT)
        {
            var e_idParameter = e_id.HasValue ?
                new ObjectParameter("e_id", e_id) :
                new ObjectParameter("e_id", typeof(int));
    
            var dteFParameter = dteF.HasValue ?
                new ObjectParameter("dteF", dteF) :
                new ObjectParameter("dteF", typeof(System.DateTime));
    
            var dteTParameter = dteT.HasValue ?
                new ObjectParameter("dteT", dteT) :
                new ObjectParameter("dteT", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<netSalesEmp_itmTot_Result>("[openshopdataEntities].[netSalesEmp_itmTot](@e_id, @dteF, @dteT)", e_idParameter, dteFParameter, dteTParameter);
        }
    
        [DbFunction("openshopdataEntities", "TableOfDays")]
        public virtual IQueryable<TableOfDays_Result> TableOfDays(Nullable<int> yr, Nullable<int> mth)
        {
            var yrParameter = yr.HasValue ?
                new ObjectParameter("yr", yr) :
                new ObjectParameter("yr", typeof(int));
    
            var mthParameter = mth.HasValue ?
                new ObjectParameter("mth", mth) :
                new ObjectParameter("mth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TableOfDays_Result>("[openshopdataEntities].[TableOfDays](@yr, @mth)", yrParameter, mthParameter);
        }
    
        public virtual int addItemPack(string tble, Nullable<int> inv_id, Nullable<int> it_id, Nullable<double> cunt)
        {
            var tbleParameter = tble != null ?
                new ObjectParameter("tble", tble) :
                new ObjectParameter("tble", typeof(string));
    
            var inv_idParameter = inv_id.HasValue ?
                new ObjectParameter("inv_id", inv_id) :
                new ObjectParameter("inv_id", typeof(int));
    
            var it_idParameter = it_id.HasValue ?
                new ObjectParameter("it_id", it_id) :
                new ObjectParameter("it_id", typeof(int));
    
            var cuntParameter = cunt.HasValue ?
                new ObjectParameter("cunt", cunt) :
                new ObjectParameter("cunt", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addItemPack", tbleParameter, inv_idParameter, it_idParameter, cuntParameter);
        }
    
        public virtual ObjectResult<CaptureMyColumns_Result> CaptureMyColumns()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CaptureMyColumns_Result>("CaptureMyColumns");
        }
    
        public virtual ObjectResult<Get_PersonAccountCredit_Result> Get_PersonAccountCredit(Nullable<int> acc_id)
        {
            var acc_idParameter = acc_id.HasValue ?
                new ObjectParameter("acc_id", acc_id) :
                new ObjectParameter("acc_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_PersonAccountCredit_Result>("Get_PersonAccountCredit", acc_idParameter);
        }
    
        public virtual ObjectResult<Get_PersonAccountCredit_before_Result> Get_PersonAccountCredit_before(Nullable<int> acc_id, Nullable<System.DateTime> beforeDte)
        {
            var acc_idParameter = acc_id.HasValue ?
                new ObjectParameter("acc_id", acc_id) :
                new ObjectParameter("acc_id", typeof(int));
    
            var beforeDteParameter = beforeDte.HasValue ?
                new ObjectParameter("BeforeDte", beforeDte) :
                new ObjectParameter("BeforeDte", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_PersonAccountCredit_before_Result>("Get_PersonAccountCredit_before", acc_idParameter, beforeDteParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> get_repre_monthsales(Nullable<int> emp_id, Nullable<int> month, Nullable<int> year)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("get_repre_monthsales", emp_idParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<get_unitsOfI_Result> get_unitsOfI(Nullable<int> item, Nullable<int> prclv)
        {
            var itemParameter = item.HasValue ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(int));
    
            var prclvParameter = prclv.HasValue ?
                new ObjectParameter("prclv", prclv) :
                new ObjectParameter("prclv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_unitsOfI_Result>("get_unitsOfI", itemParameter, prclvParameter);
        }
    
        public virtual ObjectResult<get_unitsOfItem_Result> get_unitsOfItem(Nullable<int> item_id, Nullable<int> prclvl)
        {
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("item_id", item_id) :
                new ObjectParameter("item_id", typeof(int));
    
            var prclvlParameter = prclvl.HasValue ?
                new ObjectParameter("prclvl", prclvl) :
                new ObjectParameter("prclvl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_unitsOfItem_Result>("get_unitsOfItem", item_idParameter, prclvlParameter);
        }
    
        public virtual ObjectResult<GetAccountSt_det_Result> GetAccountSt_det(Nullable<int> acc_id, Nullable<System.DateTime> dte_f, Nullable<System.DateTime> dte_t, string state)
        {
            var acc_idParameter = acc_id.HasValue ?
                new ObjectParameter("acc_id", acc_id) :
                new ObjectParameter("acc_id", typeof(int));
    
            var dte_fParameter = dte_f.HasValue ?
                new ObjectParameter("dte_f", dte_f) :
                new ObjectParameter("dte_f", typeof(System.DateTime));
    
            var dte_tParameter = dte_t.HasValue ?
                new ObjectParameter("dte_t", dte_t) :
                new ObjectParameter("dte_t", typeof(System.DateTime));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAccountSt_det_Result>("GetAccountSt_det", acc_idParameter, dte_fParameter, dte_tParameter, stateParameter);
        }
    
        public virtual ObjectResult<GetAccountStatement_Result> GetAccountStatement(Nullable<int> acc_id, Nullable<System.DateTime> dte_f, Nullable<System.DateTime> dte_t)
        {
            var acc_idParameter = acc_id.HasValue ?
                new ObjectParameter("acc_id", acc_id) :
                new ObjectParameter("acc_id", typeof(int));
    
            var dte_fParameter = dte_f.HasValue ?
                new ObjectParameter("dte_f", dte_f) :
                new ObjectParameter("dte_f", typeof(System.DateTime));
    
            var dte_tParameter = dte_t.HasValue ?
                new ObjectParameter("dte_t", dte_t) :
                new ObjectParameter("dte_t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAccountStatement_Result>("GetAccountStatement", acc_idParameter, dte_fParameter, dte_tParameter);
        }
    
        public virtual ObjectResult<GetAccountStatement_detailed_Result> GetAccountStatement_detailed(Nullable<int> acc_id, Nullable<System.DateTime> dte_f, Nullable<System.DateTime> dte_t)
        {
            var acc_idParameter = acc_id.HasValue ?
                new ObjectParameter("acc_id", acc_id) :
                new ObjectParameter("acc_id", typeof(int));
    
            var dte_fParameter = dte_f.HasValue ?
                new ObjectParameter("dte_f", dte_f) :
                new ObjectParameter("dte_f", typeof(System.DateTime));
    
            var dte_tParameter = dte_t.HasValue ?
                new ObjectParameter("dte_t", dte_t) :
                new ObjectParameter("dte_t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAccountStatement_detailed_Result>("GetAccountStatement_detailed", acc_idParameter, dte_fParameter, dte_tParameter);
        }
    
        public virtual ObjectResult<GetinCome_Result> GetinCome(Nullable<System.DateTime> dte_f, Nullable<System.DateTime> dte_t)
        {
            var dte_fParameter = dte_f.HasValue ?
                new ObjectParameter("dte_f", dte_f) :
                new ObjectParameter("dte_f", typeof(System.DateTime));
    
            var dte_tParameter = dte_t.HasValue ?
                new ObjectParameter("dte_t", dte_t) :
                new ObjectParameter("dte_t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetinCome_Result>("GetinCome", dte_fParameter, dte_tParameter);
        }
    
        public virtual ObjectResult<getItemPrice_Result> getItemPrice(string barcode)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getItemPrice_Result>("getItemPrice", barcodeParameter);
        }
    
        public virtual ObjectResult<GetItemU_Result> GetItemU(Nullable<int> item_id, Nullable<int> prclvl)
        {
            var item_idParameter = item_id.HasValue ?
                new ObjectParameter("item_id", item_id) :
                new ObjectParameter("item_id", typeof(int));
    
            var prclvlParameter = prclvl.HasValue ?
                new ObjectParameter("prclvl", prclvl) :
                new ObjectParameter("prclvl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetItemU_Result>("GetItemU", item_idParameter, prclvlParameter);
        }
    
        public virtual ObjectResult<getItemUnits_Result> getItemUnits(Nullable<int> it_id)
        {
            var it_idParameter = it_id.HasValue ?
                new ObjectParameter("it_id", it_id) :
                new ObjectParameter("it_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getItemUnits_Result>("getItemUnits", it_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetMax_idGategorySort(Nullable<int> cate_id)
        {
            var cate_idParameter = cate_id.HasValue ?
                new ObjectParameter("cate_id", cate_id) :
                new ObjectParameter("cate_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetMax_idGategorySort", cate_idParameter);
        }
    
        public virtual ObjectResult<GetOutCome_Result> GetOutCome(Nullable<System.DateTime> dte_f, Nullable<System.DateTime> dte_t)
        {
            var dte_fParameter = dte_f.HasValue ?
                new ObjectParameter("dte_f", dte_f) :
                new ObjectParameter("dte_f", typeof(System.DateTime));
    
            var dte_tParameter = dte_t.HasValue ?
                new ObjectParameter("dte_t", dte_t) :
                new ObjectParameter("dte_t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOutCome_Result>("GetOutCome", dte_fParameter, dte_tParameter);
        }
    
        public virtual ObjectResult<getProfits_Result> getProfits(Nullable<System.DateTime> dte_f, Nullable<System.DateTime> dte_t)
        {
            var dte_fParameter = dte_f.HasValue ?
                new ObjectParameter("dte_f", dte_f) :
                new ObjectParameter("dte_f", typeof(System.DateTime));
    
            var dte_tParameter = dte_t.HasValue ?
                new ObjectParameter("dte_t", dte_t) :
                new ObjectParameter("dte_t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getProfits_Result>("getProfits", dte_fParameter, dte_tParameter);
        }
    
        public virtual ObjectResult<p1_Result> p1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p1_Result>("p1");
        }
    
        public virtual ObjectResult<p2_Result> p2(Nullable<int> inv_id)
        {
            var inv_idParameter = inv_id.HasValue ?
                new ObjectParameter("inv_id", inv_id) :
                new ObjectParameter("inv_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p2_Result>("p2", inv_idParameter);
        }
    
        public virtual ObjectResult<p3_Result> p3(Nullable<int> inv_id, string typ)
        {
            var inv_idParameter = inv_id.HasValue ?
                new ObjectParameter("inv_id", inv_id) :
                new ObjectParameter("inv_id", typeof(int));
    
            var typParameter = typ != null ?
                new ObjectParameter("typ", typ) :
                new ObjectParameter("typ", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p3_Result>("p3", inv_idParameter, typParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> ProcGetItemCredit_Stock(Nullable<int> it_id, Nullable<int> stk_id)
        {
            var it_idParameter = it_id.HasValue ?
                new ObjectParameter("it_id", it_id) :
                new ObjectParameter("it_id", typeof(int));
    
            var stk_idParameter = stk_id.HasValue ?
                new ObjectParameter("stk_id", stk_id) :
                new ObjectParameter("stk_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("ProcGetItemCredit_Stock", it_idParameter, stk_idParameter);
        }
    
        public virtual int updt_payTime(Nullable<int> inv_id)
        {
            var inv_idParameter = inv_id.HasValue ?
                new ObjectParameter("inv_id", inv_id) :
                new ObjectParameter("inv_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updt_payTime", inv_idParameter);
        }
    }
}
